name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        rust_toolchain:
          - stable-x86_64-pc-windows-msvc
          - stable-x86_64-pc-windows-gnu
          - stable-x86_64-apple-darwin
          - stable-x86_64-unknown-linux-gnu
          - stable-x86_64-unknown-linux-musl
        include:
          - rust_toolchain: stable-x86_64-pc-windows-msvc
            os: windows-2019
          - rust_toolchain: stable-x86_64-pc-windows-gnu
            os: windows-2019
          - rust_toolchain: stable-x86_64-apple-darwin
            os: macOS-10.14
          - rust_toolchain: stable-x86_64-unknown-linux-gnu
            os: ubuntu-18.04
          - rust_toolchain: stable-x86_64-unknown-linux-musl
            os: ubuntu-18.04
    name: ${{ matrix.rust_toolchain }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1

      - name: rustup update
        run: |
          if [ ${{ matrix.rust_toolchain }} = stable-x86_64-unknown-linux-musl ]; then
            run_rust_musl_builder='docker run --rm -it -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder'
          else
            run_rust_musl_builder=''
          fi
          if [ ${{ matrix.os }} = macOS-10.14 ]; then
            curl -sSf --tlsv1.2 --proto '=https' -o ./rustup-init https://sh.rustup.rs
            bash ./rustup-init -y --default-toolchain none
            cat ~/.bashrc
          fi
          $run_rust_musl_builder rustup default ${{ matrix.rust_toolchain }}
          $run_rust_musl_builder rustup update ${{ matrix.rust_toolchain }}
          $run_rust_musl_builder rustup component add clippy rustfmt
        shell: bash

      - name: Display versions
        run: |
          if [ ${{ matrix.rust_toolchain }} = stable-x86_64-unknown-linux-musl ]; then
            run_rust_musl_builder='docker run --rm -it -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder'
          else
            run_rust_musl_builder=''
          fi
          $run_rust_musl_builder rustup show
          echo -e '\n'
          $run_rust_musl_builder rustc -Vv
          echo -e '\n'
          $run_rust_musl_builder cargo -Vv
          echo -e '\n'
          $run_rust_musl_builder cargo clippy -V
          echo -e '\n'
          $run_rust_musl_builder rustfmt -V
          echo -e '\n'
          bash --version
        shell: bash

      - name: cargo fmt -- --check
        run: |
          if [ ${{ matrix.rust_toolchain }} = stable-x86_64-unknown-linux-musl ]; then
            run_rust_musl_builder='docker run --rm -it -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder'
          else
            run_rust_musl_builder=''
          fi
          $run_rust_musl_builder cargo fmt --all -- --check
        shell: bash

      - name: cargo clippy
        run: |
          if [ ${{ matrix.rust_toolchain }} = stable-x86_64-unknown-linux-musl ]; then
            run_rust_musl_builder='docker run --rm -it -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder'
          else
            run_rust_musl_builder=''
          fi
          # A hack to avoid IRC
          $run_rust_musl_builder cargo check --all --all-targets
          if [ ${{ matrix.os }} = windows-2019 ]; then
            to_unix_path='cygpath -u'
          else
            to_unix_path=echo
          fi
          $run_rust_musl_builder cargo metadata --format-version 1 |
            jq -r '.workspace_members[] as $members | .packages[] | select(.id == $members) | .targets[].src_path' |
            xargs -n 1 $to_unix_path |
            xargs touch
          $run_rust_musl_builder cargo clippy --all --all-targets -- -D warnings
        shell: bash

      - name: cargo test
        run: |
          if [ ${{ matrix.rust_toolchain }} = stable-x86_64-unknown-linux-musl ]; then
            run_rust_musl_builder='docker run --rm -it -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder'
          else
            run_rust_musl_builder=''
          fi
          $run_rust_musl_builder cargo test --all --all-targets
        shell: bash

      - name: cargo run
        run: |
          if [ ${{ matrix.rust_toolchain }} = stable-x86_64-unknown-linux-musl ]; then
            run_rust_musl_builder='docker run --rm -it -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder'
          else
            run_rust_musl_builder=''
          fi
          $run_rust_musl_builder cargo run
        shell: bash

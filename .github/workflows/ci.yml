name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        rust_toolchain:
          - stable-x86_64-pc-windows-msvc
          - stable-x86_64-pc-windows-gnu
          - stable-x86_64-apple-darwin
          - stable-x86_64-unknown-linux-gnu
          - stable-x86_64-unknown-linux-musl
        include:
          - rust_toolchain: stable-x86_64-pc-windows-msvc
            os: windows-2019
          - rust_toolchain: stable-x86_64-pc-windows-gnu
            os: windows-2019
          - rust_toolchain: stable-x86_64-apple-darwin
            os: macOS-10.14
          - rust_toolchain: stable-x86_64-unknown-linux-gnu
            os: ubuntu-18.04
          - rust_toolchain: stable-x86_64-unknown-linux-musl
            os: ubuntu-18.04
    name: ${{ matrix.rust_toolchain }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - name: Echo rustup path
        run: |
          echo '$HOME='"$HOME"
          echo '$USERPROFILE='"$USERPROFILE"
          type rustup || true
          type cargo || true
          type rustc || true
          if type rustup > /dev/null 2>&1; then
            rustup show
          fi
        shell: bash
      - name: rustup-init
        run: |
          curl -sSf --tlsv1.2 --proto '=https' -o ./rustup-init https://sh.rustup.rs
          bash ./rustup-init -y --no-modify-path --default-toolchain none
          ~/.cargo/bin/rustup default ${{ matrix.rust_toolchain }}
          ~/.cargo/bin/rustup update ${{ matrix.rust_toolchain }}
          ~/.cargo/bin/rustup component add clippy rustfmt
        shell: bash
      - name: Display versions
        run: |
          PATH="$HOME/.cargo/bin:$PATH"
          rustup show
          echo -e '\n'
          rustc -Vv
          echo -e '\n'
          cargo -Vv
          echo -e '\n'
          cargo clippy -V
          echo -e '\n'
          rustfmt -V
          echo -e '\n'
          bash --version
        shell: bash
      - name: cargo fmt -- --check
        run: |
          PATH="$HOME/.cargo/bin:$PATH"
          cargo fmt --all -- --check
        shell: bash
      - name: cargo clippy
        run: |
          PATH="$HOME/.cargo/bin:$PATH"
          # A hack to avoid IRC
          cargo check --all --all-targets
          if [ ${{ matrix.os }} = windows-2019 ]; then
            to_unix_path='cygpath -u'
          else
            to_unix_path=echo
          fi
          cargo metadata --format-version 1 |
            jq -r '.workspace_members[] as $members | .packages[] | select(.id == $members) | .targets[].src_path' |
            xargs -n 1 $to_unix_path |
            xargs touch
          cargo clippy --all --all-targets -- -D warnings
        shell: bash
      - name: cargo test
        run: |
          PATH="$HOME/.cargo/bin:$PATH"
          cargo test --all --all-targets
        shell: bash
      - name: cargo run
        run: |
          PATH="$HOME/.cargo/bin:$PATH"
          cargo run
        shell: bash

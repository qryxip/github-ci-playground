name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        rust_version:
          - stable
        rust_triple:
          - x86_64-pc-windows-msvc
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
        include:
          - rust_version: stable
            rust_triple: x86_64-pc-windows-msvc
            os: windows-2019
            target_x86_64_unknown_linux_musl: ''
            release_target: ./target/release/play_github_ci.exe
          - rust_version: stable
            rust_triple: x86_64-pc-windows-gnu
            os: windows-2019
            target_x86_64_unknown_linux_musl: ''
            release_target: ./target/release/play_github_ci.exe
          - rust_version: stable
            rust_triple: x86_64-apple-darwin
            os: macOS-10.14
            target_x86_64_unknown_linux_musl: ''
            release_target: ./target/release/play_github_ci
          - rust_version: stable
            rust_triple: x86_64-unknown-linux-gnu
            os: ubuntu-18.04
            target_x86_64_unknown_linux_musl: ''
            release_target: ./target/release/play_github_ci
          - rust_version: stable
            rust_triple: x86_64-unknown-linux-musl
            os: ubuntu-18.04
            target_x86_64_unknown_linux_musl: --target x86_64-unknown-linux-musl
            release_target: ./target/x86_64-unknown-linux-musl/release/play_github_ci

    name: ${{ matrix.rust_version }}-${{ matrix.rust_triple }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v1

      - name: apt install
        run: sudo apt install -y musl-tools
        if: matrix.rust_triple == 'x86_64-unknown-linux-musl'

      - name: rustup-init
        run: |
          curl -sSf --tlsv1.2 --proto '=https' -o ./rustup-init https://sh.rustup.rs
          bash ./rustup-init -y --no-modify-path --default-toolchain none
          echo 'export PATH="$HOME/.cargo/bin:$PATH"' > /tmp/rc.bash
          source /tmp/rc.bash
          if [ ${{ matrix.rust_triple }} = x86_64-unknown-linux-musl ]; then
            rustup target add x86_64-unknown-linux-musl
            rustup default ${{ matrix.rust_version }}-x86_64-unknown-linux-gnu
          else
            rustup default ${{ matrix.rust_version }}-${{ matrix.rust_triple }}
            rustup component add rustfmt
          fi
          rustup component add clippy
          rustup update
        shell: bash

      - name: Display versions
        run: |
          source /tmp/rc.bash
          rustup show
          echo -e '\n'
          rustc -Vv
          echo -e '\n'
          cargo -Vv
          echo -e '\n'
          cargo clippy -V
          echo -e '\n'
          if [ ${{ matrix.rust_triple }} != x86_64-unknown-linux-musl ]; then
            rustfmt -V
            echo -e '\n'
          fi
          bash --version
        shell: bash

      - name: cargo fmt -- --check
        run: |
          source /tmp/rc.bash
          cargo fmt --all -- --check
        shell: bash
        if: matrix.rust_triple != 'x86_64-unknown-linux-musl'

      - name: cargo clippy
        run: |
          source /tmp/rc.bash
          # A hack to avoid IRC
          cargo check --all --all-targets --all-features ${{ matrix.target_x86_64_unknown_linux_musl }}
          if [ ${{ matrix.os }} = windows-2019 ]; then
            to_unix_paths='xargs cygpath -u'
          else
            to_unix_paths=cat
          fi
          cargo metadata --format-version 1 |
            jq -r '.workspace_members[] as $members | .packages[] | select(.id == $members) | .targets[].src_path' |
            $to_unix_paths |
            xargs touch
          cargo clippy --all --all-targets --all-features ${{ matrix.target_x86_64_unknown_linux_musl }} -- -D warnings
        shell: bash

      - name: cargo test
        run: |
          source /tmp/rc.bash
          cargo test --all --all-targets --all-features ${{ matrix.target_x86_64_unknown_linux_musl }}
        shell: bash

      - name: Release
        run: |
          source /tmp/rc.bash
          cargo build --release --all-features ${{ matrix.target_x86_64_unknown_linux_musl }}
          STEM=play_github_ci-${{ matrix.rust_version }}-${{ matrix.rust_triple }}
          git archive "./$STEM.tar" HEAD
          tar -xf "./$STEM.tar"
          mv ${{ matrix.release_target }} "./$STEM/"
          zip -r "./$STEM.zip" "./$STEM"
          zipinfo "./$STEM.zip"
        shell: bash
